"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.characters = exports.deCipher = exports.cipher = void 0;
//character list to to shift among
const characters = [
    "a", "b", "c", "d", "e", "f", "g", "h", "i", "j",
    "k", "l", "m", "n", "o", "p", "q", "r", "s", "t",
    "u", "v", "w", "x", "y", "z", "1", "2", "3", "4",
    "5", "6", "7", "8", "9", "0", " "
];
exports.characters = characters;
function charShift(character, shift) {
    //function to shift a single character
    let shifted = " ";
    let characterIndex = characters.indexOf(character);
    if (shift > 0) { //handles positive shift
        while (shift > characters.length) {
            shift -= characters.length;
        }
        if (characterIndex + shift < characters.length) {
            shifted = characters[characterIndex + shift];
        }
        else {
            shifted = characters[characterIndex + shift - characters.length];
        }
    }
    else if (shift < 0) { //handles negative shift
        while (shift < -characters.length) {
            shift += characters.length;
        }
        if (characterIndex + shift >= 0) {
            shifted = characters[characterIndex + shift];
        }
        else {
            shifted = characters[characterIndex + shift + characters.length];
        }
    }
    return shifted;
}
function cipher(text, shift) {
    //ceasar cipher function
    let formated = text.toLowerCase();
    let ciphered = "";
    //shifts each character of input and apends them to ciphered
    for (let i = 0; i < formated.length; i++) {
        ciphered += charShift(formated[i], shift);
    }
    return ciphered;
}
exports.cipher = cipher;
function deCipher(text, shift) {
    //decipher function, basically the oposit of the cipher function
    return cipher(text, -shift);
}
exports.deCipher = deCipher;
